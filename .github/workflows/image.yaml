# Copyright 2024 NVIDIA CORPORATION
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Run this workflow on pull requests
name: image

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main
      - release-*
  push:
    branches:
      - main
      - release-*

jobs:
  devel-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version:
        - "1.22"
        - "1.22.1"
        - "1.21"
        - "1.21.4"
        - "1.21.5"
        - "1.20"
        - "1.20.2"
        - "1.20.4"
        - "1.20.5"
        ispr:
        - ${{github.event_name == 'pull_request'}}
        exclude:
        - ispr: true
          go-version: "1.22.1"
        - ispr: true
          go-version: "1.21.4"
        - ispr: true
          go-version: "1.21.5"
        - ispr: true
          go-version: "1.20.2"
        - ispr: true
          go-version: "1.20.4"
        - ispr: true
          go-version: "1.20.5"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Calculate build vars
        id: vars
        run: |
          if [ "${{ matrix.ispr }}" = "true" ]; then
            echo "IMAGE_PUSH=false" >> $GITHUB_ENV
            echo "IMAGE_OUTPUTS=type=docker,dest=/tmp/k8s-test-infra-image.tar" >> $GITHUB_ENV
            echo "IMAGE_PLATFORMS=linux/amd64" >> $GITHUB_ENV
          else
            echo "IMAGE_PUSH=true" >> $GITHUB_ENV
            echo "IMAGE_OUTPUTS=type=registry,push=true" >> $GITHUB_ENV
            echo "IMAGE_PLATFORMS=linux/amd64,linux/arm64" >> $GITHUB_ENV
          fi
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          push: ${{ env.IMAGE_PUSH }}
          context: .
          outputs: ${{ env.IMAGE_OUTPUTS }}
          file: ./images/devel/Dockerfile
          platforms: ${{ env.IMAGE_PLATFORMS }}
          build-args: |
            GOLANG_VERSION=${{ matrix.go-version }}
          tags: ghcr.io/${{ github.event.pull_request.head.repo.full_name }}:devel-go${{ matrix.go-version }}
